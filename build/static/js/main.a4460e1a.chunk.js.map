{"version":3,"sources":["media/locations sync /^/.*$","media/locations/frantsikentta1.JPG","media/locations/frantsikentta2.JPG","media/locations/harkahaa1.JPG","media/locations/harkahaa2.JPG","media/locations/ilpoinen1.JPG","media/locations/ilpoinen2.JPG","media/locations/koroinen1.JPG","media/locations/koroinen2.JPG","media/locations/kuninkoja1.JPG","media/locations/kuninkoja2.JPG","media/locations/kupittaa1.JPG","media/locations/kupittaa2.JPG","media/locations/kuuvuori1.JPG","media/locations/kuuvuori2.JPG","media/locations/moikoinen1.JPG","media/locations/moikoinen2.JPG","media/locations/teraslautelakentta1.JPG","media/locations/teraslautelakentta2.JPG","media/locations/urheilupuisto1.JPG","media/locations/urheilupuisto2.JPG","media/locations/varissuo1.JPG","media/locations/varissuo2.JPG","components/SideDrawer/DrawerToggle.tsx","components/Navbar/Navbar.tsx","components/SideDrawer/SideDrawer.tsx","components/Hero.tsx","views/Home.tsx","components/Map.tsx","components/LocationsList.tsx","components/SelectedListItem.tsx","redux/actions/map.ts","redux/actionTypes.ts","views/Locations.tsx","redux/actions/images.ts","components/Accordion/Accordion.tsx","views/ExerciseInfo.tsx","components/ImageCarousel.tsx","components/LocationInfoBox.tsx","views/LocationInfo.tsx","components/Footer.tsx","firebase.ts","redux/actions/locations.ts","components/Backdrop/Backdrop.tsx","App.tsx","redux/actions/machines.ts","serviceWorker.ts","redux/reducers/map.ts","store/configureStore.ts","redux/reducers/locations.ts","redux/reducers/images.ts","redux/reducers/machines.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","DrawerToggle","click","className","onClick","Navbar","drawerHandler","to","SideDrawer","show","drawerClasses","Hero","Home","style","color","ghost","LocationMap","handleClickMap","useState","lat","setLat","long","setLong","zoom","locations","useSelector","state","mapParams","useEffect","latitude","longitude","viewport","center","Map","onViewportChange","TileLayer","url","attribution","location","Marker","key","position","Popup","name","address","LocationsList","handleClick","window","innerWidth","SelectedListItem","selectedLocation","setMapParams","newMapObject","dispatch","_getState","type","payload","Locations","setSelectedLocation","useDispatch","span","setImageData","images","Accordion","content","reps","sets","active","setActive","image","setImage","contentRef","useRef","axios","get","then","response","data","selectedImages","filter","destination_id","length","current","maxHeight","scrollHeight","src","image_url","ref","ExerciseInfo","machines","background","width","margin","paddingTop","machine","repetitions","ImageCarousel","draggable","require","LocationInfoBox","LocationInfo","useParams","Footer","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","setLocationData","Backdrop","App","sideDrawerOpen","setSideDrawerOpen","a","db","firestore","collection","forEach","locationToAppend","location_id","fetchData","prevState","path","Boolean","hostname","match","initialMapState","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a4460e1a.chunk.js","sourcesContent":["var map = {\n\t\"./frantsikentta1.JPG\": 179,\n\t\"./frantsikentta2.JPG\": 180,\n\t\"./harkahaa1.JPG\": 181,\n\t\"./harkahaa2.JPG\": 182,\n\t\"./ilpoinen1.JPG\": 183,\n\t\"./ilpoinen2.JPG\": 184,\n\t\"./koroinen1.JPG\": 185,\n\t\"./koroinen2.JPG\": 186,\n\t\"./kuninkoja1.JPG\": 187,\n\t\"./kuninkoja2.JPG\": 188,\n\t\"./kupittaa1.JPG\": 189,\n\t\"./kupittaa2.JPG\": 190,\n\t\"./kuuvuori1.JPG\": 191,\n\t\"./kuuvuori2.JPG\": 192,\n\t\"./moikoinen1.JPG\": 193,\n\t\"./moikoinen2.JPG\": 194,\n\t\"./teraslautelakentta1.JPG\": 195,\n\t\"./teraslautelakentta2.JPG\": 196,\n\t\"./urheilupuisto1.JPG\": 197,\n\t\"./urheilupuisto2.JPG\": 198,\n\t\"./varissuo1.JPG\": 199,\n\t\"./varissuo2.JPG\": 200\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 178;","module.exports = __webpack_public_path__ + \"static/media/frantsikentta1.62c4fc23.JPG\";","module.exports = __webpack_public_path__ + \"static/media/frantsikentta2.127d6fd5.JPG\";","module.exports = __webpack_public_path__ + \"static/media/harkahaa1.be850b29.JPG\";","module.exports = __webpack_public_path__ + \"static/media/harkahaa2.df84412d.JPG\";","module.exports = __webpack_public_path__ + \"static/media/ilpoinen1.6a06919d.JPG\";","module.exports = __webpack_public_path__ + \"static/media/ilpoinen2.d0edae3f.JPG\";","module.exports = __webpack_public_path__ + \"static/media/koroinen1.7fa94e07.JPG\";","module.exports = __webpack_public_path__ + \"static/media/koroinen2.850da890.JPG\";","module.exports = __webpack_public_path__ + \"static/media/kuninkoja1.0eab1ec0.JPG\";","module.exports = __webpack_public_path__ + \"static/media/kuninkoja2.455f52f6.JPG\";","module.exports = __webpack_public_path__ + \"static/media/kupittaa1.06355108.JPG\";","module.exports = __webpack_public_path__ + \"static/media/kupittaa2.d3554638.JPG\";","module.exports = __webpack_public_path__ + \"static/media/kuuvuori1.d5cb8753.JPG\";","module.exports = __webpack_public_path__ + \"static/media/kuuvuori2.1f60a3a5.JPG\";","module.exports = __webpack_public_path__ + \"static/media/moikoinen1.4afe2a07.JPG\";","module.exports = __webpack_public_path__ + \"static/media/moikoinen2.53bcdb5c.JPG\";","module.exports = __webpack_public_path__ + \"static/media/teraslautelakentta1.65858962.JPG\";","module.exports = __webpack_public_path__ + \"static/media/teraslautelakentta2.821aab46.JPG\";","module.exports = __webpack_public_path__ + \"static/media/urheilupuisto1.21896f8c.JPG\";","module.exports = __webpack_public_path__ + \"static/media/urheilupuisto2.5b5a22b2.JPG\";","module.exports = __webpack_public_path__ + \"static/media/varissuo1.27734498.JPG\";","module.exports = __webpack_public_path__ + \"static/media/varissuo2.aa18614c.JPG\";","import React from 'react';\r\n\r\nimport './DrawerToggle.css';\r\n\r\nconst DrawerToggle: React.FC<{ click: () => void }> = ({ click }) => {\r\n    return (\r\n        <button className=\"toggle-button\" onClick={() => click()}>\r\n            <div className=\"toggle-button_line\" />\r\n            <div className=\"toggle-button_line\" />\r\n            <div className=\"toggle-button_line\" />\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default DrawerToggle;\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle';\r\n\r\nimport './Navbar.css';\r\n\r\nconst Navbar: React.FC<{ drawerHandler: () => void }> = ({ drawerHandler }) => {\r\n    return (\r\n        <header className=\"navbar\">\r\n            <nav className=\"navbar_navigation\">\r\n                <div className=\"navbar_toggle-button\">\r\n                    <DrawerToggle click={drawerHandler} />\r\n                </div>\r\n                <div className=\"navbar_logo\"><Link to={\"/\"}></Link>LIIKKUVATURKU</div>\r\n                <div className=\"spacer\" />\r\n                <div className=\"navbar_navigation-items\">\r\n                    <ul>\r\n                        <Link to=\"/\"><li>Aloitus</li></Link>\r\n                        <Link to=\"/locations\"><li>Sijainnit</li></Link>\r\n                        <Link to=\"/exerciseinfo\"><li>Liikeohjeet</li></Link>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './SideDrawer.css';\r\n\r\nconst SideDrawer: React.FC<{ show: boolean; click: () => void }> = ({ show, click }) => {\r\n\r\n    let drawerClasses = 'side-drawer';\r\n    if (show) {\r\n        drawerClasses = 'side-drawer open';\r\n    }\r\n    return (\r\n        <ul className={drawerClasses}>\r\n            <Link to={\"/\"} onClick={() => click()}><li>Aloitus</li></Link>\r\n            <Link to={\"/locations\"} onClick={() => click()}><li>Sijainnit</li></Link>\r\n            <Link to={\"/exerciseinfo\"} onClick={() => click()}><li>Liikeohjeet</li></Link>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React from 'react';\r\nimport '../styles/header.css';\r\n\r\nconst Hero: React.FC = () => {\r\n    return (\r\n        <div className=\"hero-image\">\r\n            <div className=\"hero-container\">\r\n                <h1 className=\"hero-text\">LIIKKUVATURKU</h1>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Hero;\r\n","import React from 'react';\r\nimport '../App.css';\r\nimport Hero from '../components/Hero';\r\nimport { Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home: React.FC = () => {\r\n    return (\r\n        <div className=\"content\">\r\n            <Hero />\r\n            <div className=\"card\">\r\n                <h1 style={{ color: \"white\" }}>Liikkumista ulkolaitteilla</h1>\r\n                <p>Ympäri Turun kaupunkia sijaitsevat ulkokuntolaitteet ovat mainio tapa kasvattaa ja ylläpitää lihaskuntoa.\r\n                liikkuvaturku.fi avulla löydät laitteiden sijainnit helposti kartalta laadukkailla kuvilla varustettuna.\r\n                </p>\r\n                <Link to={\"/locations\"}><Button ghost className=\"button\">Etsi lähimmät ulkokuntoilulaitteet</Button></Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Map, Marker, Popup, TileLayer, Viewport } from 'react-leaflet';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState, Location } from '../types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../styles/locations-view.css';\r\n\r\nconst LocationMap: React.FC<{ handleClickMap: (location: Location, latitude: number, longitude: number, zoom: number) => void }> = ({ handleClickMap }) => {\r\n\r\n    const [lat, setLat] = useState(60.454510);\r\n    const [long, setLong] = useState(22.264824);\r\n\r\n    let zoom = 13;\r\n\r\n    const selectLocations = (state: RootState) => state.locations;\r\n    const selectMapParams = (state: RootState) => state.map;\r\n\r\n    const locations = useSelector(selectLocations);\r\n    const mapParams = useSelector(selectMapParams);\r\n\r\n    useEffect(() => {\r\n        setLat(mapParams.latitude);\r\n        setLong(mapParams.longitude);\r\n    }, [mapParams]);\r\n\r\n    const viewport: Viewport = {\r\n        center: [lat, long],\r\n        zoom: mapParams.zoom,\r\n    };\r\n\r\n    const getZoom = (viewport: Viewport) => {\r\n        if (viewport.zoom && viewport.zoom !== null)\r\n            zoom = viewport.zoom;\r\n    };\r\n    return (\r\n        <div className=\"map-container\">\r\n            <Map viewport={viewport} onViewportChange={getZoom}>\r\n                <TileLayer\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n                />\r\n                {locations.map(location =>\r\n                    <Marker\r\n                        key={location.id}\r\n                        position={[location.latitude, location.longitude]}\r\n                        onClick={() => handleClickMap(location, location.latitude, location.longitude, zoom)}\r\n                    >\r\n                        <Popup>\r\n                            <p><b>Nimi:</b> {location.name}</p>\r\n                            <p><b>Osoite:</b> {location.address}</p>\r\n                            <Link to={`/locations/${location.id}`}>\r\n                                <p className=\"info-item\">Katso kuvat täältä</p>\r\n                            </Link>\r\n                        </Popup>\r\n\r\n                    </Marker>\r\n                )}\r\n            </Map>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LocationMap;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState, Location } from '../types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../styles/locations-view.css';\r\n\r\nconst LocationsList: React.FC<{ handleClick: (location: Location, latitude: number, longitude: number) => void }> = ({ handleClick }) => {\r\n\r\n    const selectLocations = (state: RootState) => state.locations;\r\n    const locations = useSelector(selectLocations);\r\n\r\n    if (!locations) {\r\n        return null;\r\n    }\r\n    // Mobile\r\n    else if (window.innerWidth < 700) {\r\n        return (\r\n            <div className=\"list-container-mobile\">\r\n                <h1>Ulkoliikuntalaitteet</h1>\r\n                <ul className=\"list\">\r\n                    {locations.map(location =>\r\n                        <Link to={`/locations/${location.id}`} key={location.id}>\r\n                            <li className=\"list-item\">{location.name}\r\n                            </li>\r\n                        </Link>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n    // Desktop\r\n    return (\r\n        <div className=\"list-container\">\r\n            <h1>Ulkoliikuntalaitteet</h1>\r\n            <ul className=\"list\">\r\n                {locations.map(location =>\r\n                    <li\r\n                        onClick={() => handleClick(location, location.latitude, location.longitude)}\r\n                        key={location.id}\r\n                        className=\"list-item\">\r\n                        {location.name}\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LocationsList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Location } from '../types';\r\n\r\nimport '../styles/locations-view.css';\r\n\r\nconst SelectedListItem: React.FC<{ selectedLocation: Location | null }> = ({ selectedLocation }) => {\r\n    return (\r\n        <div className=\"selected-item-container\">\r\n            <h1>Valittu sijainti</h1>\r\n            <div className=\"info-box\">\r\n                {selectedLocation === null || !selectedLocation\r\n                    ?\r\n                    <div>\r\n                        <br />\r\n                        <h3 style={{ color: \"white\" }}>Valitse sijainti kartalta tai listalta</h3>\r\n                        <br />\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <p className=\"info-item\"><b>Nimi:</b> {selectedLocation.name}</p>\r\n                        <p className=\"info-item\"><b>Osoite:</b> {selectedLocation.address}</p>\r\n                        <p className=\"info-item\"><b>Laitteet: </b>Ylätalja, punnerruslaite, dippitanko</p>\r\n                        <Link to={`/locations/${selectedLocation.id}`}>\r\n                            <p className=\"info-item\">Katso kuvat täältä</p>\r\n                        </Link>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SelectedListItem;","import { Map } from '../../types';\r\nimport { AppActions, SET_MAP } from '../actionTypes';\r\nimport { Dispatch } from \"redux\";\r\nimport { AppState } from '../../store/configureStore';\r\n\r\nexport const setMapData = (map: Map): AppActions => ({\r\n    type: SET_MAP,\r\n    payload: {\r\n        map\r\n    }\r\n});\r\n\r\n\r\nexport const setMapParams = (latitude: number, longitude: number, zoom: number) => {\r\n    const newMapObject: Map = {\r\n        latitude,\r\n        longitude,\r\n        zoom\r\n    };\r\n    return (dispatch: Dispatch<AppActions>, _getState: () => AppState) => {\r\n\r\n        dispatch(setMapData(newMapObject));\r\n    };\r\n};\r\n","import { Location, Image, Map, Machine } from '../types';\r\n\r\n// Actions types for all locations.\r\nexport const SET_LOCATIONS = \"GET_LOCATIONS\";\r\n\r\nexport interface SetLocationsAction {\r\n    type: typeof SET_LOCATIONS;\r\n    payload: {\r\n        location: Location;\r\n    };\r\n}\r\n\r\nexport type LocationActions = SetLocationsAction;\r\n\r\n\r\n// Action types for selected location.\r\nexport const SET_SELECTED_LOCATION = \"SET_SELECTED_LOCATION\";\r\n\r\n\r\nexport interface SetSelectedLocationAction {\r\n    type: typeof SET_SELECTED_LOCATION;\r\n    payload: {\r\n        location: Location;\r\n    };\r\n}\r\n\r\nexport type SelectedLocationActions = SetSelectedLocationAction;\r\n\r\n// Action types for image URLS.\r\nexport const SET_IMAGES = \"SET_IMAGES\";\r\n\r\nexport interface SetImageAction {\r\n    type: typeof SET_IMAGES;\r\n    payload: {\r\n        images: Image[];\r\n    };\r\n}\r\n\r\nexport type ImageActions = SetImageAction;\r\n\r\n// Action types for map parameters\r\nexport const SET_MAP = \"SET_MAP\";\r\n\r\nexport interface SetMapActions {\r\n    type: typeof SET_MAP;\r\n    payload: {\r\n        map: Map;\r\n    };\r\n}\r\n\r\nexport type MapActions = SetMapActions;\r\n\r\n// Action types for excercise machines\r\nexport const SET_MACHINES = \"SET_MACHINE\";\r\n\r\nexport interface SetMachineActions {\r\n    type: typeof SET_MACHINES;\r\n    payload: {\r\n        machines: Machine[];\r\n    };\r\n}\r\n\r\nexport type MachineActions = SetMachineActions;\r\n\r\n// All actions\r\nexport type AppActions = LocationActions | SelectedLocationActions | ImageActions | MapActions | MachineActions;","import React, { useState } from 'react';\r\nimport '../App.css';\r\nimport { Row, Col } from 'antd';\r\nimport LocationMap from '../components/Map';\r\nimport LocationsList from '../components/LocationsList';\r\nimport SelectedListItem from '../components/SelectedListItem';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setMapParams } from '../redux/actions/map';\r\nimport { Location } from '../types';\r\n\r\nconst Locations: React.FC = () => {\r\n\r\n    const [selectedLocation, setSelectedLocation] = useState<Location | null>(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = (location: Location, latitude: number, longitude: number) => {\r\n        setSelectedLocation(location);\r\n        dispatch(setMapParams(latitude, longitude, 14));\r\n    };\r\n    const handleClickMap = (location: Location, latitude: number, longitude: number, zoom: number) => {\r\n        setSelectedLocation(location);\r\n        dispatch(setMapParams(latitude, longitude, zoom));\r\n    };\r\n    if (window.innerWidth < 700) {\r\n        return (\r\n            <div className=\"content\">\r\n                <LocationMap handleClickMap={handleClickMap} />\r\n                <LocationsList handleClick={handleClick} />\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div className=\"content\">\r\n            <LocationMap handleClickMap={handleClickMap} />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <LocationsList handleClick={handleClick} />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <SelectedListItem selectedLocation={selectedLocation} />\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Locations;","import { Image } from '../../types';\r\nimport { AppActions, SET_IMAGES } from '../actionTypes';\r\nimport { Dispatch } from \"redux\";\r\nimport { AppState } from '../../store/configureStore';\r\nimport axios from 'axios';\r\n\r\nexport const setImageData = (images: Image[]): AppActions => ({\r\n    type: SET_IMAGES,\r\n    payload: {\r\n        images\r\n    }\r\n});\r\n\r\n\r\nexport const setMachineImages = () => {\r\n    return (dispatch: Dispatch<AppActions>, _getState: () => AppState) => {\r\n        axios.get<Image[]>('http://localhost:3003/api/images/machines').then((response) => {\r\n            dispatch(setImageData(response.data));\r\n        });\r\n    };\r\n};\r\n\r\n\r\nexport const setLocationImagesById = (id: string) => {\r\n    return (dispatch: Dispatch<AppActions>, _getState: () => AppState) => {\r\n        axios.get<Image[]>(`http://localhost:3003/api/images/locations/${id}`).then((response) => {\r\n            dispatch(setImageData(response.data));\r\n        });\r\n    };\r\n};","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setMachineImages } from '../../redux/actions/images';\r\nimport { RootState, Image } from '../../types';\r\n\r\nimport './Accordion.css';\r\n\r\nconst Accordion: React.FC<{ id: string; name: string; content: string; reps: string; sets: string }> = ({ id, name, content, reps, sets }) => {\r\n    const [active, setActive] = useState(false);\r\n    const [image, setImage] = useState<Image | null>(null);\r\n    const contentRef = useRef<HTMLDivElement>(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // Set all images of excercise machines to redux\r\n    useEffect(() => {\r\n        dispatch(setMachineImages());\r\n    }, [dispatch]);\r\n\r\n    // Get the images from redux\r\n    const selectImages = (state: RootState) => state.images;\r\n    const selectedImages = useSelector(selectImages);\r\n\r\n    useEffect(() => {\r\n        setImage(selectedImages.filter(image => image.destination_id === id)[0]);\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (selectedImages.length !== 0) {\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            contentRef.current!.style.maxHeight = active ? `${contentRef.current!.scrollHeight}px` : '0px';\r\n        }\r\n    }, [contentRef, active, selectedImages]);\r\n\r\n    const toggleActive = () => {\r\n        setActive(!active);\r\n    };\r\n\r\n    if (selectedImages.length === 0 && image === null && !image) return null;\r\n    return (\r\n        <div className=\"menu-container\">\r\n            <button\r\n                onClick={toggleActive}\r\n                className=\"menu_item-button\"><img className=\"accordion_item-image\" src={image?.image_url} />{name}</button>\r\n            <div className=\"menu_item-content\" ref={contentRef}>\r\n                <h4 style={{ color: \"white\" }}>Liikeohjeet:</h4>\r\n                <p>\r\n                    {content}\r\n                </p>\r\n                <h4 style={{ color: \"white\" }}>Liikemäärä:</h4>\r\n                <p>Tee {reps} toistoa ja {sets} settiä. Pidä settien välissä 30-60 sekunnin lepotauko.</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Accordion;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../types';\r\nimport Accordion from '../components/Accordion/Accordion';\r\n\r\n\r\nconst ExerciseInfo: React.FC = () => {\r\n    const selectMachines = (state: RootState) => state.machines;\r\n    const machines = useSelector(selectMachines);\r\n\r\n    return (\r\n        <div className=\"content\" style={{ background: \"rgba(255, 255, 255, 0.171)\", width: \"80%\", margin: \"1% 10%\" }}>\r\n            <h1 style={{ paddingTop: \"2%\" }}>Valitse laite</h1>\r\n            {machines.map(machine =>\r\n                <Accordion\r\n                    key={machine.id}\r\n                    id={machine.id}\r\n                    name={machine.name}\r\n                    content={machine.content}\r\n                    reps={machine.repetitions}\r\n                    sets={machine.sets}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExerciseInfo;","/* eslint-disable no-undef */\r\nimport React from 'react';\r\nimport { Carousel } from 'antd';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../types';\r\n\r\nimport '../styles/locationInfo-view.css';\r\n\r\nconst ImageCarousel: React.FC<{ id: string }> = ({ id }) => {\r\n\r\n    const selectLocations = (state: RootState) => state.locations;\r\n    const locations = useSelector(selectLocations);\r\n\r\n    const selectedLocation = locations.filter(location => location.id === id)[0];\r\n\r\n    if (selectedLocation === null || !selectedLocation) return null;\r\n    else if (!selectedLocation.images[0]) return null;\r\n    return (\r\n        <Carousel draggable={true}>\r\n            {selectedLocation.images.map(image => {\r\n                return (\r\n                    <div className=\"img-container\" key={image}>\r\n                        <img src={require(`.././media/locations/${image}`)} />\r\n                    </div>\r\n                );\r\n            })}\r\n        </Carousel>\r\n    );\r\n};\r\n\r\nexport default ImageCarousel;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../types';\r\nimport { Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../styles/locationInfo-view.css';\r\n\r\nconst LocationInfoBox: React.FC<{ id: string }> = ({ id }) => {\r\n\r\n    const selectLocations = (state: RootState) => state.locations;\r\n    const locations = useSelector(selectLocations);\r\n\r\n    const selectedLocation = locations.filter(location => location.id === id)[0];\r\n\r\n    if (selectedLocation === null || !selectedLocation) return null;\r\n    return (\r\n        <div>\r\n            <h1>{selectedLocation.name}</h1>\r\n            <p className=\"info-text\">Osoite: {selectedLocation.address}</p>\r\n            <Link to={`/locations`}><Button ghost className=\"button\">Takaisin</Button></Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LocationInfoBox;","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { ParamTypes } from '../types';\r\nimport ImageCarousel from '../components/ImageCarousel';\r\nimport LocationInfoBox from '../components/LocationInfoBox';\r\n\r\nimport '../styles/locationInfo-view.css';\r\n\r\nconst LocationInfo: React.FC = () => {\r\n\r\n    const { id } = useParams<ParamTypes>();\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"container\">\r\n                <ImageCarousel id={id} />\r\n                <LocationInfoBox id={id} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LocationInfo;","import React from 'react';\r\nimport '../App.css';\r\n\r\nconst Footer: React.FC = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"footer-inner\">\r\n                <p>Copyright 2020 © All rights reserved</p>\r\n                <p>Contact Email joona.uutela@gmail.com</p>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import firebase from 'firebase';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBGnP2Jo8_su7JtjFZ_s2ZFDBkHKttb8UQ\",\r\n    authDomain: \"liikkuvaturku.firebaseapp.com\",\r\n    databaseURL: \"https://liikkuvaturku.firebaseio.com\",\r\n    projectId: \"liikkuvaturku\",\r\n    storageBucket: \"liikkuvaturku.appspot.com\",\r\n    messagingSenderId: \"972371168989\",\r\n    appId: \"1:972371168989:web:70d98f2a330c87fc629534\",\r\n    measurementId: \"G-0KVQCMHSGD\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;","import { Location } from '../../types';\r\nimport { AppActions, SET_LOCATIONS } from '../actionTypes';\r\nimport { Dispatch } from \"redux\";\r\nimport { AppState } from '../../store/configureStore';\r\nimport firebase from '../../firebase';\r\n\r\nexport const setLocationData = (location: Location): AppActions => ({\r\n    type: SET_LOCATIONS,\r\n    payload: {\r\n        location\r\n    }\r\n});\r\n\r\nexport const setLocations = () => {\r\n\r\n    return (dispatch: Dispatch<AppActions>, _getState: () => AppState) => {\r\n        const fetchData = async () => {\r\n            const db = firebase.firestore();\r\n            const locationData = await db.collection('locations').get();\r\n\r\n            locationData.forEach(location => {\r\n                const data = location.data();\r\n                const locationToAppend: Location = {\r\n                    id: data.location_id,\r\n                    name: data.name,\r\n                    latitude: data.latitude,\r\n                    longitude: data.longitude,\r\n                    address: data.address,\r\n                    images: data.images\r\n                };\r\n                dispatch(setLocationData(locationToAppend));\r\n            });\r\n        };\r\n        fetchData();\r\n    };\r\n};","import React from 'react';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst Backdrop: React.FC<{ click: () => void }> = ({ click }) => {\r\n    return (\r\n        <div className=\"backdrop\" onClick={() => click()} />\r\n    );\r\n};\r\n\r\nexport default Backdrop;\r\n","import './App.css';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport SideDrawer from './components/SideDrawer/SideDrawer';\r\nimport Home from './views/Home';\r\nimport Locations from './views/Locations';\r\nimport ExerciseInfo from './views/ExerciseInfo';\r\nimport LocationInfo from './views/LocationInfo';\r\nimport Footer from './components/Footer';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch, Route\r\n} from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { setLocations } from './redux/actions/locations';\r\nimport Backdrop from './components/Backdrop/Backdrop';\r\nimport { setMachines } from './redux/actions/machines';\r\n\r\nconst App: React.FC = () => {\r\n\r\n    const [sideDrawerOpen, setSideDrawerOpen] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(setLocations());\r\n        dispatch(setMachines());\r\n    }, [dispatch]);\r\n\r\n    // TODO: seperate navbar functionality and components into its own component\r\n    const drawerHandler = (): void => {\r\n        setSideDrawerOpen(prevState => !prevState);\r\n    };\r\n\r\n    const backdropHandler = (): void => {\r\n        setSideDrawerOpen(false);\r\n    };\r\n    return (\r\n        <Router>\r\n            <div className=\"App\">\r\n                <Navbar drawerHandler={drawerHandler} />\r\n                <SideDrawer show={sideDrawerOpen} click={drawerHandler} />\r\n                {sideDrawerOpen &&\r\n                    <Backdrop click={backdropHandler} />\r\n                }\r\n                <Switch>\r\n                    <Route path=\"/locations/:id\">\r\n                        <LocationInfo />\r\n                    </Route>\r\n                    <Route path=\"/locations\">\r\n                        <Locations />\r\n                    </Route>\r\n                    <Route path=\"/exerciseinfo\">\r\n                        <ExerciseInfo />\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <Home />\r\n                    </Route>\r\n                </Switch>\r\n                <Footer />\r\n            </div>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default App;","import { Machine } from '../../types';\r\nimport { AppActions, SET_MACHINES } from '../actionTypes';\r\nimport { Dispatch } from \"redux\";\r\nimport { AppState } from '../../store/configureStore';\r\nimport axios from 'axios';\r\n\r\nexport const setLocationData = (machines: Machine[]): AppActions => ({\r\n    type: SET_MACHINES,\r\n    payload: {\r\n        machines\r\n    }\r\n});\r\n\r\nexport const setMachines = () => {\r\n    return (dispatch: Dispatch<AppActions>, _getState: () => AppState) => {\r\n        axios.get<Machine[]>('http://localhost:3003/api/machines').then((response) => {\r\n            dispatch(setLocationData(response.data));\r\n        });\r\n    };\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { Map } from '../../types';\r\nimport { MapActions, SET_MAP } from '../actionTypes';\r\n\r\nconst initialMapState: Map = {\r\n    latitude: 60.454510,\r\n    longitude: 22.264824,\r\n    zoom: 12\r\n};\r\n\r\nconst mapReducer = (state: Map = initialMapState, action: MapActions): Map => {\r\n    switch (action.type) {\r\n        case SET_MAP:\r\n            return action.payload.map;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport { mapReducer };","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk, { ThunkMiddleware } from 'redux-thunk';\r\nimport { locationReducer } from '../redux/reducers/locations';\r\nimport { imageReducer } from '../redux/reducers/images';\r\nimport { mapReducer } from '../redux/reducers/map';\r\nimport { machineReducer } from '../redux/reducers/machines';\r\n\r\nimport { AppActions } from '../redux/actionTypes';\r\n\r\nexport const rootReducer = combineReducers({\r\n    locations: locationReducer,\r\n    images: imageReducer,\r\n    map: mapReducer,\r\n    machines: machineReducer\r\n});\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk as ThunkMiddleware<AppState, AppActions>));","import { Location } from '../../types';\r\nimport { LocationActions, SET_LOCATIONS } from '../actionTypes';\r\n\r\nconst locationReducer = (state: Location[] = [], action: LocationActions): Location[] => {\r\n    switch (action.type) {\r\n        case SET_LOCATIONS:\r\n            return [...state, action.payload.location];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport { locationReducer };","import { Image } from '../../types';\r\nimport { ImageActions, SET_IMAGES } from '../actionTypes';\r\n\r\nconst imageReducer = (state: Image[] = [], action: ImageActions): Image[] => {\r\n    switch (action.type) {\r\n        case SET_IMAGES:\r\n            return [...action.payload.images];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport { imageReducer };","import { Machine } from '../../types';\r\nimport { MachineActions, SET_MACHINES } from '../actionTypes';\r\n\r\nconst machineReducer = (state: Machine[] = [], action: MachineActions): Machine[] => {\r\n    switch (action.type) {\r\n        case SET_MACHINES:\r\n            return [...state, ...action.payload.machines];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport { machineReducer };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { store } from './store/configureStore';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />,\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}